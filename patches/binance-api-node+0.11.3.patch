diff --git a/node_modules/binance-api-node/index.d.ts b/node_modules/binance-api-node/index.d.ts
index 0b20614..45dccc1 100644
--- a/node_modules/binance-api-node/index.d.ts
+++ b/node_modules/binance-api-node/index.d.ts
@@ -10,7 +10,7 @@ declare module 'binance-api-node' {
     wsFutures?: string
   }): Binance
 
-  export enum ErrorCodes {
+  export const enum ErrorCodes {
     UNKNOWN = -1000,
     DISCONNECTED = -1001,
     UNAUTHORIZED = -1002,
@@ -102,7 +102,7 @@ declare module 'binance-api-node' {
     success: boolean
   }
 
-  export enum DepositStatus {
+  export const enum DepositStatus {
     PENDING = 0,
     SUCCESS = 1,
   }
@@ -119,7 +119,7 @@ declare module 'binance-api-node' {
     success: boolean
   }
 
-  export enum WithdrawStatus {
+  export const enum WithdrawStatus {
     EMAIL_SENT = 0,
     CANCELLED = 1,
     AWAITING_APPROVAL = 2,
@@ -206,7 +206,7 @@ declare module 'binance-api-node' {
     responseTime?: string
   }
 
-  export enum TransferType {
+  export const enum TransferType {
     MAIN_C2C = 'MAIN_C2C',
     MAIN_UMFUTURE = 'MAIN_UMFUTURE',
     MAIN_CMFUTURE = 'MAIN_CMFUTURE',
@@ -254,7 +254,7 @@ declare module 'binance-api-node' {
     }[]
   }
 
-  export enum MarginType {
+  export const enum MarginType {
     ISOLATED = "ISOLATED",
     CROSSED = "CROSSED"
   }
@@ -576,7 +576,7 @@ declare module 'binance-api-node' {
 
   export type ReconnectingWebSocketHandler = (options?: WebSocketCloseOptions) => void
 
-  export enum CandleChartInterval {
+  export const enum CandleChartInterval {
     ONE_MINUTE = '1m',
     THREE_MINUTES = '3m',
     FIVE_MINUTES = '5m',
@@ -594,17 +594,17 @@ declare module 'binance-api-node' {
     ONE_MONTH = '1M',
   }
 
-  export enum RateLimitType {
+  export const enum RateLimitType {
     REQUEST_WEIGHT = 'REQUEST_WEIGHT',
     ORDERS = 'ORDERS'
   }
 
-  export enum TradingType {
+  export const enum TradingType {
     MARGIN = 'MARGIN',
     SPOT = 'SPOT',
   }
 
-  export enum RateLimitInterval {
+  export const enum RateLimitInterval {
     SECOND = 'SECOND',
     MINUTE = 'MINUTE',
     DAY = 'DAY'
@@ -617,7 +617,7 @@ declare module 'binance-api-node' {
     limit: number
   }
 
-  export enum ExchangeFilterType {
+  export const enum ExchangeFilterType {
     EXCHANGE_MAX_NUM_ORDERS = 'EXCHANGE_MAX_NUM_ORDERS',
     EXCHANGE_MAX_ALGO_ORDERS = 'EXCHANGE_MAX_ALGO_ORDERS'
   }
@@ -627,7 +627,7 @@ declare module 'binance-api-node' {
     limit: number
   }
 
-  export enum SymbolFilterType {
+  export const enum SymbolFilterType {
     PRICE_FILTER = 'PRICE_FILTER',
     PERCENT_PRICE = 'PERCENT_PRICE',
     LOT_SIZE = 'LOT_SIZE',
@@ -755,7 +755,7 @@ declare module 'binance-api-node' {
     useServerTime?: boolean
   }
 
-  export enum SideEffectType {
+  export const enum SideEffectType {
     NO_SIDE_EFFECT = 'NO_SIDE_EFFECT',
     MARGIN_BUY = 'MARGIN_BUY',
     AUTO_REPAY = 'AUTO_REPAY'
@@ -788,19 +788,19 @@ declare module 'binance-api-node' {
     fills?: OrderFill[]
   }
 
-  export enum ListOrderStatus {
+  export const enum ListOrderStatus {
     EXECUTING ='EXECUTING',
     ALL_DONE = 'ALL_DONE',
     REJECT = 'REJECT'
   }
 
-  export enum ListStatusType {
+  export const enum ListStatusType {
     RESPONSE = 'RESPONSE',
     EXEC_STARTED = 'EXEC_STARTED',
     ALL_DONE = 'ALL_DONE'
   }
 
-  export enum OcoOrderType {
+  export const enum OcoOrderType {
     CONTINGENCY_TYPE = 'OCO',
   }
 
@@ -817,12 +817,12 @@ declare module 'binance-api-node' {
   }
 
 
-  export enum OrderSide {
+  export const enum OrderSide {
     BUY = 'BUY',
     SELL = 'SELL'
   }
 
-  export enum OrderStatus {
+  export const enum OrderStatus {
     CANCELED = 'CANCELED',
     EXPIRED = 'EXPIRED',
     FILLED = 'FILLED',
@@ -832,7 +832,7 @@ declare module 'binance-api-node' {
     REJECTED = 'REJECTED'
   }
 
-  export enum OrderType {
+  export const enum OrderType {
   LIMIT = 'LIMIT',
   LIMIT_MAKER = 'LIMIT_MAKER',
   MARKET = 'MARKET',
@@ -844,19 +844,19 @@ declare module 'binance-api-node' {
   TRAILING_STOP_MARKET = 'TRAILING_STOP_MARKET'
   }
 
-  export enum NewOrderRespType {
+  export const enum NewOrderRespType {
     ACK = 'ACK',
     RESULT = 'RESULT',
     FULL = 'FULL'
   }
 
-  export enum TimeInForce {
+  export const enum TimeInForce {
     GTC = 'GTC',
     IOC = 'IOC',
     FOK = 'FOK'
   }
 
-  export enum OrderRejectReason {
+  export const enum OrderRejectReason {
     ACCOUNT_CANNOT_SETTLE = 'ACCOUNT_CANNOT_SETTLE',
     ACCOUNT_INACTIVE = 'ACCOUNT_INACTIVE',
     DUPLICATE_ORDER = 'DUPLICATE_ORDER',
@@ -870,7 +870,7 @@ declare module 'binance-api-node' {
     UNKNOWN_ORDER = 'UNKNOWN_ORDER',
   }
 
-  export enum ExecutionType {
+  export const enum ExecutionType {
     NEW = 'NEW',
     CANCELED ='CANCELED',
     REPLACED = 'REPLACED',
@@ -977,7 +977,7 @@ declare module 'binance-api-node' {
     }
   }
 
-  export enum EventType {
+  export const enum EventType {
     ACCOUNT = 'account',
     BALANCE_UPDATE = 'balanceUpdate',
     OUTBOUND_ACCOUNT_POSITION = 'outboundAccountPosition',
@@ -1323,7 +1323,7 @@ declare module 'binance-api-node' {
     msg: string
   }
 
-  export enum FuturesIncomeType {
+  export const enum FuturesIncomeType {
     TRANSFER = 'TRANSFER',
     WELCOME_BONUS = 'WELCOME_BONUS',
     REALIZED_PNL = 'REALIZED_PNL',
@@ -1379,7 +1379,7 @@ declare module 'binance-api-node' {
     totalNetAssetOfBtc: string
   }
 
-  export enum MarginLevelStatus {
+  export const enum MarginLevelStatus {
     EXCESSIVE = 'EXCESSIVE',
     NORMAL = 'NORMAL',
     MARGIN_CALL = 'MARGIN_CALL',
@@ -1414,7 +1414,7 @@ declare module 'binance-api-node' {
     totalAsset: string
   }
 
-  export enum WalletType {
+  export const enum WalletType {
     SPOT = 'SPOT',
     ISOLATED_MARGIN ='ISOLATED_MARGIN'
   }
